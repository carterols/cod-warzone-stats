{"version":3,"sources":["components/Navbar.js","components/Search.js","service/userService.js","components/UserCard.js","components/Leaderboards.js","components/MatchCard.js","App.js","serviceWorker.js","index.js","icons/psn.svg","icons/xbox.svg","icons/battle-net.svg","icons/trophy.svg"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","menuButton","marginRight","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","platformButton","padding","display","justifyContent","flexWrap","chip","margin","Search","props","useState","platform","setPlatform","user","setUser","searches","cookies","get","handleImgClick","e","currentTarget","firstChild","getAttribute","search","a","length","set","JSON","stringify","userName","path","maxAge","hasOwnProperty","toLowerCase","checkForSubmit","key","getPlaceholder","Autocomplete","freeSolo","options","Object","keys","getOptionLabel","option","openOnFocus","value","filterSelectedOptions","onChange","newUser","onInputChange","val","renderInput","params","inputProps","onKeyDown","TextField","placeholder","InputProps","startAdornment","InputAdornment","style","IconButton","color","onClick","Icon","data-value","src","BattleNetIcon","alt","PSNIcon","XboxIcon","endAdornment","fullWidth","COD_API_BASE_URL","getUser","uid","replace","url","axios","res","data","status","getFriendsStats","getRecentMatches","typography","button","closeButton","marginLeft","UserCard","wins","kills","kdRatio","downs","topTwentyFive","topTen","topFive","contracts","revives","score","timePlayed","gamesPlayed","deaths","scorePerMinute","cash","colors","renderArrowIcon","stat","fontSize","Card","removeCard","CardContent","align","gutterBottom","Box","parseFloat","toFixed","Divider","Grid","container","item","xs","toLocaleString","seconds","days","Math","floor","leftOverSeconds","hours","minutes","displayTimePlayed","descendingComparator","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","map","headCell","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","flex","EnhancedTableToolbar","clsx","width","paper","table","minWidth","border","clip","height","overflow","top","EnhancedTable","React","setOrder","setOrderBy","selected","page","setPage","rowsPerPage","setRowsPerPage","changeSelected","newSelected","emptyRows","min","Paper","TableContainer","Table","aria-labelledby","size","aria-label","target","forEach","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","labelId","hover","console","log","handleClick","role","aria-checked","tabIndex","component","scope","avgKills","avgScore","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","topDivider","firstPlacement","fifthPlacement","fifteenPlacement","kdColumn","textAlign","centerCircle","marginTop","MatchCard","placement","matchDate","Date","utcStartSeconds","teamKills","playerStats","numPlayers","getColumnWidth","teamStats","players","player","getTeamKills","justify","wrap","teamPlacement","placementColor","Trophy","getTrophy","j","k","getPlacementString","sm","idx","username","damageDone","assists","getMaxStats","users","userKeys","maxStats","getStatColors","getTeamStats","teams","teamName","pos","team","name","indexOf","withCookies","visibleUsers","setVisibleUsers","searchError","setSearchError","loadingResults","setLoadingResults","allUsers","setAllUsers","recentMatches","setRecentMatches","tabSelected","setTabSelected","useEffect","lastSearchedUser","searchUser","userService","results","newAllUsers","lifetime","mode","br","properties","round","newVisibleUsers","matches","match","playerCount","teamCount","rankedTeams","filter","undefined","friendsResults","friend","p","handleUserClose","selectedUsers","handleAlertClose","handleTabChange","newValue","Container","maxWidth","hidden","Chip","onDelete","_","LinearProgress","Tabs","indicatorColor","centered","Tab","renderSearchResults","renderLeaderboards","renderMainStats","renderRecentMatches","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","Boolean","window","location","hostname","darkTheme","createMuiTheme","ReactDOM","render","StrictMode","CookiesProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c4aab848.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Warzone BR Stats\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { TextField, InputAdornment, IconButton, makeStyles } from '@material-ui/core'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport PSNIcon from '../icons/psn.svg';\r\nimport XboxIcon from '../icons/xbox.svg';\r\nimport BattleNetIcon from '../icons/battle-net.svg';\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    platformButton: {\r\n        padding: '4px',\r\n        marginRight: '2px'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        padding: theme.spacing(0.5),\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n}));\r\n\r\nexport default function Search(props) {\r\n    const classes = useStyles();\r\n    const [platform, setPlatform] = useState('battle');\r\n    const [user, setUser] = useState('');\r\n    const searches = props.cookies.get('search_history');\r\n\r\n    function getSearchResults() {\r\n        if (searches) {\r\n            if (searches.hasOwnProperty(platform)) {\r\n                return Object.keys(searches[platform]);\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const handleImgClick = (e) => {\r\n        setPlatform(e.currentTarget.firstChild.firstChild.firstChild.getAttribute('data-value'));\r\n    };\r\n\r\n    const handleSearchChange = (e, val) => {\r\n        setUser(val);\r\n    }\r\n\r\n    const search = async () => {\r\n        if (!user || user.length === 0) return;\r\n\r\n        const success = await props.search(user, platform);\r\n\r\n        if (success) {\r\n            let searches = props.cookies.get('search_history');\r\n            \r\n            props.cookies.set('lastSearchedUser', JSON.stringify({\r\n                userName: user,\r\n                platform: platform\r\n            }), { path: '/', maxAge: 60 * 60 * 24 * 5 });\r\n            \r\n            if (!searches) {\r\n                searches = {};\r\n            }\r\n\r\n            if (!searches.hasOwnProperty(platform)) {\r\n                searches[platform] = {}\r\n            }\r\n            if (!searches[platform].hasOwnProperty(user.toLowerCase())) {\r\n                searches[platform][user.toLowerCase()] = user;\r\n            }\r\n            // set cookies to expire in 1 year\r\n            props.cookies.set('search_history', JSON.stringify(searches), { path: '/', maxAge: 60 * 60 * 24 * 365 })\r\n        }\r\n        setUser('');\r\n    }\r\n\r\n    const checkForSubmit = (e) => {\r\n        if (e.key === 'Enter') {\r\n            search();\r\n        }\r\n    }\r\n\r\n    function getPlaceholder() {\r\n        if (platform === 'battle') return 'Search Battle.net...';\r\n        else if (platform === 'psn') return 'Search PlayStation Network...';\r\n        else return 'Search Xbox Live...';\r\n    }\r\n\r\n    const renderTextField = (params) => {\r\n        params.inputProps.onKeyDown = checkForSubmit;\r\n        return (\r\n            <TextField\r\n                {...params}\r\n                placeholder={getPlaceholder()}\r\n                InputProps={{\r\n                    ...params.InputProps,\r\n                    placeholder: getPlaceholder(),\r\n                    startAdornment: (\r\n                        <>\r\n                            <InputAdornment style={{ marginBottom: '5px' }}>\r\n                                <IconButton className={classes.platformButton} color='inherit' onClick={handleImgClick} >\r\n                                    <Icon>\r\n                                        <img\r\n                                            data-value='battle'\r\n                                            src={BattleNetIcon}\r\n                                            alt=\"Battle.net icon\"\r\n                                            className={(platform === 'battle' ? 'icon-selected' : '')} />\r\n                                    </Icon>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                            <InputAdornment style={{ marginBottom: '5px' }}>\r\n                                <IconButton className={classes.platformButton} color='inherit' onClick={handleImgClick} >\r\n                                    <Icon>\r\n                                        <img\r\n                                            data-value='psn'\r\n                                            src={PSNIcon}\r\n                                            alt=\"PSN icon\"\r\n                                            className={(platform === 'psn' ? 'icon-selected' : '')} />\r\n                                    </Icon>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                            <InputAdornment style={{ marginBottom: '5px' }}>\r\n                                <IconButton className={classes.platformButton} color='inherit' onClick={handleImgClick} >\r\n                                    <Icon>\r\n                                        <img\r\n                                            data-value='xbl'\r\n                                            src={XboxIcon}\r\n                                            alt=\"Xbox icon\"\r\n                                            className={(platform === 'xbl' ? 'icon-selected' : '')} />\r\n                                    </Icon>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        </>\r\n                    ),\r\n                    endAdornment: (\r\n                        <InputAdornment style={{ marginBottom: '5px' }}>\r\n                            <IconButton color='primary' onClick={e => search(user, platform)}>\r\n                                <AddCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n                fullWidth={true}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Autocomplete\r\n            freeSolo\r\n            options={getSearchResults()}\r\n            getOptionLabel={option => option}\r\n            openOnFocus={false}\r\n            value={user}\r\n            filterSelectedOptions\r\n            onChange={(e, newUser) => setUser(newUser)}\r\n            onInputChange={handleSearchChange}\r\n            renderInput={renderTextField}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst COD_API_BASE_URL = \"https://my.callofduty.com/api/papi-client/stats/cod/v1/title/mw/platform/\";\r\nconst COD_LOGIN = \"https://profile.callofduty.com/cod/login\";\r\n\r\nexport default {\r\n    getUser: async (user, platform) => {\r\n        const uid = user.replace(\"#\", \"%23\");\r\n        const url = `${COD_API_BASE_URL + platform}/gamer/${uid}/profile/type/mp`;\r\n        const res = await axios.get(url);\r\n\r\n        if (res.data.status !== 'error') {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n    getFriendsStats: async (user, platform) => {\r\n        const uid = user.replace(\"#\", \"%23\");\r\n        const url = `${COD_API_BASE_URL + platform}/gamer/${uid}/profile/friends/type/mp`;\r\n        const res = await axios.get(url);\r\n\r\n        if (res.data.status !== 'error') {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n    getRecentMatches: async (user, platform) => {\r\n        const uid = user.replace('#', '%23');\r\n        const res = await axios.get(`https://pacific-badlands-14289.herokuapp.com/matches/platform/${platform}/user/${uid}`);\r\n        return res.data;\r\n    }\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Card, CardContent, makeStyles, Divider, Grid, Box, IconButton } from '@material-ui/core';\r\nimport '../App.css';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    ...theme.typography.button,\r\n  },\r\n  closeButton: {\r\n    marginLeft: 'auto'\r\n  }\r\n}));\r\n\r\nfunction displayTimePlayed(seconds) {\r\n  const days = Math.floor(seconds / 86400).toLocaleString();\r\n  let leftOverSeconds = seconds % 86400;\r\n\r\n  const hours = Math.floor(leftOverSeconds / 3600).toLocaleString();\r\n  leftOverSeconds = leftOverSeconds % 3600;\r\n\r\n  const minutes = Math.floor(leftOverSeconds / 60).toLocaleString();\r\n  leftOverSeconds = leftOverSeconds % 60;\r\n\r\n  return `${days} days, ${hours} hours, ${minutes} minutes, ${leftOverSeconds} seconds`;\r\n}\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    userName,\r\n    wins,\r\n    kills,\r\n    kdRatio,\r\n    downs,\r\n    topTwentyFive,\r\n    topTen,\r\n    contracts,\r\n    revives,\r\n    topFive,\r\n    score,\r\n    timePlayed,\r\n    gamesPlayed,\r\n    scorePerMinute,\r\n    cash,\r\n    deaths\r\n  } = props.data;\r\n\r\n  const colors = props.colors;\r\n\r\n  const renderArrowIcon = (stat) => {\r\n    if (colors[stat] === 'none') {\r\n      return null;\r\n    } else if (colors[stat] === 'error') {\r\n      return (\r\n        <ArrowDownwardIcon color='error' fontSize='inherit' />\r\n      );\r\n    } else if (colors[stat] === 'primary') {\r\n      return (\r\n        <ArrowUpwardIcon color='primary' fontSize='inherit' />\r\n      );\r\n    }\r\n  }\r\n \r\n  const closeCard = (e) => {\r\n    props.removeCard(userName);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <IconButton onClick={closeCard}>\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent align='center'>\r\n        <Typography align='center' className={classes.root} gutterBottom>\r\n          {userName}\r\n        </Typography>\r\n        <Box className='circle' margin={2}>\r\n          <Typography align='center' variant=\"h5\">\r\n            {renderArrowIcon('kdRatio')}\r\n            {parseFloat(kdRatio).toFixed(2)}\r\n            <Typography align='center' variant=\"h5\" className={classes.root}>\r\n              K/D Ratio\r\n            </Typography>\r\n          </Typography>\r\n        </Box>\r\n        <Divider />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Kills\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('kills')}\r\n              {kills.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Deaths\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('deaths')}\r\n              {deaths.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Downs\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('downs')}\r\n              {downs.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Score\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('score')}\r\n              {score.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Time Played\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('timePlayed')}\r\n              {displayTimePlayed(timePlayed)}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Wins\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('wins')}\r\n              {wins.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Games Played\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('gamesPlayed')}\r\n              {gamesPlayed.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Top 5\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('topFive')}\r\n              {topFive.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Top 10\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('topTen')}\r\n              {topTen.toLocaleString()}\r\n            </Typography>\r\n            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n              Top 25\r\n            </Typography>\r\n            <Typography align='left' variant='h4' className={classes.root}>\r\n              {renderArrowIcon('topTwentyFive')}\r\n              {topTwentyFive.toLocaleString()}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction descendingComparator (a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator (order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort (array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'userName', numeric: false, disablePadding: true, label: 'USER' },\r\n    { id: 'kills', numeric: true, disablePadding: false, label: 'KILLS' },\r\n    { id: 'deaths', numeric: true, disablePadding: false, label: 'DEATHS' },\r\n    { id: 'downs', numeric: true, disablePadding: false, label: 'DOWNS' },\r\n    { id: 'avgKills', numeric: true, disablePadding: false, label: 'AVG. KILLS' },\r\n    { id: 'kdRatio', numeric: true, disablePadding: false, label: 'K/D RATIO' },\r\n    { id: 'gamesPlayed', numeric: true, disablePadding: false, label: 'GAMES PLAYED' },\r\n    { id: 'wins', numeric: true, disablePadding: false, label: 'WINS' },\r\n    { id: 'score', numeric: true, disablePadding: false, label: 'SCORE' },\r\n    { id: 'avgScore', numeric: true, disablePadding: false, label: 'AVG. SCORE' },\r\n];\r\n\r\nconst EnhancedTableHead = (props) => {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = property => event => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n            <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                checked={rowCount > 0 && numSelected === rowCount}\r\n                onChange={onSelectAllClick}\r\n                color='default'\r\n                inputProps={{ 'aria-label': 'select all users' }}\r\n                />\r\n            </TableCell>\r\n            {headCells.map(headCell => (\r\n                <TableCell\r\n                key={headCell.id}\r\n                align={'left'}\r\n                padding={headCell.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === headCell.id ? order : false}\r\n                >\r\n                <TableSortLabel\r\n                    active={orderBy === headCell.id}\r\n                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                    onClick={createSortHandler(headCell.id)}\r\n                >\r\n                    {headCell.label}\r\n                    {orderBy === headCell.id ? (\r\n                    <span className={classes.visuallyHidden}>\r\n                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                    </span>\r\n                    ) : null}\r\n                </TableSortLabel>\r\n                </TableCell>\r\n            ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.secondary,\r\n            backgroundColor: theme.palette.primary,\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  }));\r\n  \r\nconst EnhancedTableToolbar = props => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n  \r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Leaderboards\r\n          </Typography>\r\n        )}\r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n  \r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    }\r\n}));\r\n  \r\nexport default function EnhancedTable(props) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('desc');\r\n    const [orderBy, setOrderBy] = React.useState('score');\r\n    const selected = props.selected;\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  \r\n    const handleRequestSort = (event, property) => {\r\n      const isAsc = orderBy === property && order === 'asc';\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    };\r\n\r\n    function changeSelected(newSelected) {\r\n        props.changeSelected(newSelected);\r\n    }\r\n  \r\n    const handleSelectAllClick = event => {\r\n      if (event.target.checked) {\r\n          let newSelected = {};\r\n          props.data.forEach(user => {\r\n              newSelected[user.userName] = {\r\n                  data: props.data[user]\r\n              }\r\n          });\r\n        changeSelected(newSelected);\r\n        return;\r\n      }\r\n      changeSelected({});\r\n    };\r\n  \r\n    const handleClick = (event, row) => {\r\n        console.log(row);\r\n      let newSelected = {\r\n        ...selected\r\n      };\r\n  \r\n      if (!selected.hasOwnProperty(row.userName)) {\r\n          newSelected[row.userName] = {\r\n              data: row\r\n          }\r\n      } else {\r\n        delete newSelected[row.userName];\r\n      }\r\n  \r\n      changeSelected(newSelected);\r\n    };\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = event => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n  \r\n    const isSelected = userName => {\r\n        if (selected.hasOwnProperty(userName)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n  \r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.data.length - page * rowsPerPage);\r\n    \r\n    if (props.data) {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <EnhancedTableToolbar numSelected={Object.keys(selected).length} />\r\n            <TableContainer>\r\n              <Table\r\n                className={classes.table}\r\n                aria-labelledby=\"tableTitle\"\r\n                size={'medium'}\r\n                aria-label=\"leaderboards\"\r\n              >\r\n                <EnhancedTableHead\r\n                  classes={classes}\r\n                  numSelected={Object.keys(selected).length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                  onRequestSort={handleRequestSort}\r\n                  rowCount={props.data.length}\r\n                />\r\n                <TableBody>\r\n                  {stableSort(props.data, getComparator(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                      const isItemSelected = isSelected(row.userName);\r\n                      const labelId = `user-checkbox-${index}`;\r\n    \r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          onClick={event => handleClick(event, row)}\r\n                          role=\"checkbox\"\r\n                          aria-checked={isItemSelected}\r\n                          key={index}\r\n                          tabIndex={-1}\r\n                          className={isItemSelected ? 'row-selected' : null}\r\n                          selected={isItemSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              checked={isItemSelected}\r\n                              color='default'\r\n                              inputProps={{ 'aria-labelledby': labelId }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                            {row.userName}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.kills}</TableCell>\r\n                          <TableCell align=\"left\">{row.deaths}</TableCell>\r\n                          <TableCell align=\"left\">{row.downs}</TableCell>\r\n                          <TableCell align=\"left\">{row.avgKills}</TableCell>\r\n                          <TableCell align=\"left\">{row.kdRatio}</TableCell>\r\n                          <TableCell align=\"left\">{row.gamesPlayed}</TableCell>\r\n                          <TableCell align=\"left\">{row.wins}</TableCell>\r\n                          <TableCell align=\"left\">{row.score}</TableCell>\r\n                          <TableCell align=\"left\">{row.avgScore}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: (53) * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={props.data.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n}","import React from 'react';\r\nimport { Icon, Paper, Typography, Box, makeStyles, Grid, Divider } from '@material-ui/core';\r\nimport '../App.css';\r\nimport Trophy from '../icons/trophy.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      ...theme.typography.button,\r\n    },\r\n    container: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    topDivider: {\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    firstPlacement: {\r\n        color: '#FFD700 !important'\r\n    },\r\n    fifthPlacement: {\r\n        color: '#D5D5D7 !important'\r\n    },\r\n    fifteenPlacement: {\r\n        color: '#DA9F65 !important'\r\n    },\r\n    kdColumn: {\r\n        textAlign: 'center'\r\n    },\r\n    centerCircle: {\r\n        marginTop: '16px',\r\n        marginBottom: '16px',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    }\r\n}));\r\n\r\n\r\nfunction getPlacementString(placement) {\r\n    let j = placement % 10, k = placement % 100;\r\n    \r\n    if (j === 1 && k !== 11) {\r\n        return placement + \"ST\";\r\n    }\r\n    if (j === 2 && k !== 12) {\r\n        return placement + \"ND\";\r\n    }\r\n    if (j === 3 && k !== 13) {\r\n        return placement + \"RD\";\r\n    }\r\n    return placement + \"TH\";\r\n}\r\n\r\nfunction getColumnWidth(numPlayers) {\r\n    switch (numPlayers) {\r\n        case 4:\r\n            return 2;\r\n        case 3:\r\n            return 3;\r\n        case 2:\r\n            return 4;\r\n        default:\r\n            return 6;\r\n    }\r\n}\r\n\r\nfunction getTeamKills(players) {\r\n    let kills = 0;\r\n    players.forEach((player) => {\r\n        kills += player.playerStats.kills;\r\n    });\r\n    return kills;\r\n}\r\n\r\nexport default function MatchCard(props) {\r\n    const classes = useStyles();\r\n    const data = props.data;\r\n    const matchDate = new Date(data.utcStartSeconds * 1000);\r\n    const matchDuration = Math.floor(data.playerStats.timePlayed / 60);\r\n    const columnWidth = getColumnWidth(data.teamStats.players.length);\r\n    const teamKills = getTeamKills(data.teamStats.players);\r\n\r\n    function getPlacementColor(placement) {\r\n        if (placement === 1) {\r\n            return classes.firstPlacement;\r\n        } else if (placement <= 5) {\r\n            return classes.fifthPlacement;\r\n        } else if (placement <= 15) {\r\n            return classes.fifteenPlacement;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getTrophy(placement) {\r\n        let placementColor = '';\r\n        if (placement === 1) {\r\n            placementColor = 'first-placement-svg';\r\n        } else if (placement <= 5) {\r\n            placementColor = 'fifth-placement-svg';\r\n        } else if (placement <= 15) {\r\n            placementColor = 'fifteen-placement-svg';\r\n        }\r\n        if (placement <= 15) {\r\n            return (\r\n                <Icon fontSize='inherit'>\r\n                    <img\r\n                        data-value='battle'\r\n                        src={Trophy}\r\n                        alt=\"Battle.net icon\"\r\n                        className={placementColor}\r\n                    />\r\n                </Icon>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.container}>\r\n            <Grid container justify='center' spacing={3} wrap='wrap'>\r\n                <Grid item xs={6}>\r\n                    <Typography variant='h6' align='left' color='textPrimary'>\r\n                        {matchDate.toLocaleString()}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Typography variant='h6' align='right' className={getPlacementColor(data.playerStats.teamPlacement)}>\r\n                        {getTrophy(data.playerStats.teamPlacement)}\r\n                        &nbsp;\r\n                        {getPlacementString(data.playerStats.teamPlacement)} PLACE\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Divider />\r\n                </Grid>\r\n                <Grid item xs={12} sm>\r\n                    <Typography align='center' variant=\"h5\" className={classes.root}>\r\n                        KILLS: {teamKills} \r\n                    </Typography>\r\n                    <Box className={'circle ' + classes.centerCircle}>\r\n                        <Typography align='center' variant=\"h5\">\r\n                            {parseFloat(data.playerStats.kdRatio).toFixed(2)}\r\n                            <Typography align='center' variant=\"h5\" className={classes.root}>\r\n                            K/D Ratio\r\n                            </Typography>\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                {data.teamStats.players.map((player, idx) => {\r\n                    return (\r\n                        <Grid item key={idx} xs={6} sm>\r\n                            <Typography align='left' variant=\"h5\" className={classes.root} color={player.username === data.player.username ? 'primary' : 'textSecondary'}>\r\n                                {player.username}\r\n                            </Typography>\r\n                            <Divider />\r\n                            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n                                Score\r\n                            </Typography>\r\n                            <Typography align='left' variant='h4' className={classes.root}>\r\n                                {player.playerStats.score.toLocaleString()}\r\n                            </Typography>\r\n                            <Typography variant='h5' className={classes.root} color='textSecondary'>\r\n                                Kills\r\n                            </Typography>\r\n                            <Typography variant='h4' className={classes.root}>\r\n                                {player.playerStats.kills}\r\n                            </Typography>\r\n                            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n                                Deaths\r\n                            </Typography>\r\n                            <Typography align='left' variant='h4' className={classes.root}>\r\n                                {player.playerStats.deaths}\r\n                            </Typography>\r\n                            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n                                Damage Done\r\n                            </Typography>\r\n                            <Typography align='left' variant='h4' className={classes.root}>\r\n                                {player.playerStats.damageDone}\r\n                            </Typography>  \r\n                            <Typography align='left' variant=\"h5\" className={classes.root} color='textSecondary'>\r\n                                Assists\r\n                            </Typography>\r\n                            <Typography align='left' variant='h4' className={classes.root}>\r\n                                {player.playerStats.assists}\r\n                            </Typography>\r\n                        </Grid>\r\n                    )\r\n                })}          \r\n            </Grid>\r\n        </Paper>\r\n    )\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Search from \"./components/Search\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Snackbar,\r\n  Paper,\r\n  Chip,\r\n  makeStyles,\r\n  Button,\r\n  Tabs,\r\n  Tab\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport userService from \"./service/userService\";\r\nimport UserCard from \"./components/UserCard\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport Leaderboards from \"./components/Leaderboards\";\r\nimport MatchCard from \"./components/MatchCard\";\r\nimport \"./App.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: \"2rem\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  marginTop: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getMaxStats(users) {\r\n  const userKeys = Object.keys(users);\r\n  let maxStats = {};\r\n\r\n  if (userKeys.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  userKeys.forEach(user => {\r\n    Object.keys(users[user].data).forEach(key => {\r\n      if (\r\n        maxStats.hasOwnProperty(key) &&\r\n        users[user].data[key] > users[maxStats[key]].data[key]\r\n      ) {\r\n        maxStats[key] = user;\r\n      } else if (!maxStats.hasOwnProperty(key)) {\r\n        maxStats[key] = user;\r\n      }\r\n    });\r\n  });\r\n\r\n  return maxStats;\r\n}\r\n\r\nfunction getStatColors(user, maxStats) {\r\n  let colors = {};\r\n  // if there is 1 or less users\r\n  if (!maxStats) {\r\n    Object.keys(user.data).forEach(key => {\r\n      colors[key] = \"none\";\r\n    });\r\n\r\n    return colors;\r\n  }\r\n\r\n  Object.keys(maxStats).forEach(stat => {\r\n    if (maxStats[stat] !== user.data.userName) {\r\n      colors[stat] = \"error\";\r\n    } else {\r\n      colors[stat] = \"primary\";\r\n    }\r\n  });\r\n\r\n  return colors;\r\n}\r\n\r\nfunction getTeamStats(teams, teamName) {\r\n  const pos = teams.map(team => team.name).indexOf(teamName);\r\n  return teams[pos];\r\n}\r\n\r\nfunction App(props) {\r\n  const classes = useStyles();\r\n  const [visibleUsers, setVisibleUsers] = useState({});\r\n  const [searchError, setSearchError] = useState(false);\r\n  const [loadingResults, setLoadingResults] = useState(false);\r\n  const [allUsers, setAllUsers] = useState({});\r\n  const [recentMatches, setRecentMatches] = useState([]);\r\n  const [tabSelected, setTabSelected] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const lastSearchedUser = props.cookies.get('lastSearchedUser');\r\n\r\n    if (lastSearchedUser) {\r\n      searchUser(lastSearchedUser.userName, lastSearchedUser.platform);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const searchUser = async (user, platform) => {\r\n    if (visibleUsers.hasOwnProperty(user)) {\r\n      return false;\r\n    }\r\n\r\n    setLoadingResults(true);\r\n    const results = await userService.getUser(user, platform);\r\n\r\n    if (results) {\r\n      let player = {};\r\n      let newAllUsers = {};\r\n\r\n      player.data = results.data.lifetime.mode.br.properties;\r\n      player.data.kdRatio = parseFloat(player.data.kdRatio.toFixed(2));\r\n      player.data.avgKills = parseInt(\r\n        Math.round(player.data.kills / player.data.gamesPlayed)\r\n      );\r\n      player.data.avgScore = parseInt(\r\n        Math.round(player.data.score / player.data.gamesPlayed)\r\n      );\r\n      player.data.userName = results.data.username;\r\n      player.data.platform = platform;\r\n      \r\n      let newVisibleUsers = {};\r\n\r\n      newVisibleUsers[player.data.userName] = player;\r\n      newAllUsers[player.data.userName] = player;\r\n\r\n      let matches = await userService.getRecentMatches(user, platform);\r\n      matches = matches.matches.map(match => ({\r\n        utcStartSeconds: match.utcStartSeconds,\r\n        playerCount: match.playerCount,\r\n        player: match.player,\r\n        mode: match.mode,\r\n        playerStats: match.playerStats,\r\n        teamCount: match.teamCount,\r\n        teamStats: getTeamStats(match.rankedTeams, match.player.team)\r\n      })).filter(match => match.teamStats !== undefined && (match.mode === 'br_89' || match.mode === 'br_25' ));\r\n      setRecentMatches(matches);\r\n\r\n      let friendsResults = await userService.getFriendsStats(user, platform);\r\n      if (friendsResults && friendsResults.status === \"success\") {\r\n        friendsResults = friendsResults.data;\r\n        friendsResults = friendsResults.forEach(friend => {\r\n          if (friend.platform === \"uno\") {\r\n            friend.platform = \"battle\";\r\n          }\r\n          let data = friend.lifetime.mode.br.properties;\r\n          data.kdRatio = parseFloat(data.kdRatio.toFixed(2));\r\n          newAllUsers[friend.username] = {\r\n            data: {\r\n              ...data,\r\n              userName: friend.username,\r\n              avgKills: parseInt(Math.round(data.kills / data.gamesPlayed)),\r\n              avgScore: parseInt(Math.round(data.score / data.gamesPlayed)),\r\n              platform: friend.platform\r\n            }\r\n          };\r\n        });\r\n      }\r\n\r\n      const maxStats = getMaxStats(visibleUsers);\r\n\r\n      Object.keys(newVisibleUsers).forEach(p => {\r\n        newVisibleUsers[p].colors = getStatColors(newVisibleUsers[p], maxStats);\r\n      });\r\n\r\n      setLoadingResults(false);\r\n      setVisibleUsers(newVisibleUsers);\r\n      setAllUsers(newAllUsers);\r\n      return true;\r\n    } else {\r\n      setSearchError(true);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleUserClose = userName => {\r\n    let newVisibleUsers = {\r\n      ...visibleUsers\r\n    };\r\n\r\n    delete newVisibleUsers[userName];\r\n    setVisibleUsers(newVisibleUsers);\r\n  };\r\n\r\n  const renderSearchResults = index => {\r\n    if (Object.keys(visibleUsers).length > 0) {\r\n      return Object.keys(visibleUsers).map(user => {\r\n        return (\r\n          <Grid item hidden={index !== tabSelected} key={user} sm={6}>\r\n            <UserCard\r\n              data={visibleUsers[user].data}\r\n              colors={visibleUsers[user].colors}\r\n              removeCard={handleUserClose}\r\n            />\r\n          </Grid>\r\n        );\r\n      });\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderTags = index => {\r\n    if (Object.keys(visibleUsers).length > 0) {\r\n      return (\r\n        <Paper hidden={index !== tabSelected} className={classes.root}>\r\n          \r\n          {Object.keys(visibleUsers).map(user => {\r\n            return (\r\n              <Chip\r\n                key={user}\r\n                label={user}\r\n                onDelete={_ => handleUserClose(user)}\r\n                className={classes.chip}\r\n              />\r\n            );\r\n          })}\r\n        </Paper>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderProgressBar = () => {\r\n    if (loadingResults) {\r\n      return (\r\n        <Grid item sm={12}>\r\n          <LinearProgress color=\"primary\" />\r\n        </Grid>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  function getRows() {\r\n    return Object.keys(allUsers).map(user => allUsers[user].data);\r\n  }\r\n\r\n  const changeSelected = selectedUsers => {\r\n    const maxStats = getMaxStats(selectedUsers);\r\n    Object.keys(selectedUsers).forEach(user => {\r\n      selectedUsers[user].colors = getStatColors(selectedUsers[user], maxStats);\r\n    });\r\n    setVisibleUsers(selectedUsers);\r\n  };\r\n\r\n  const renderLeaderboards = index => {\r\n    if (Object.keys(allUsers).length > 1) {\r\n      return (\r\n        <Grid item hidden={index !== tabSelected} sm={12}>\r\n          <Leaderboards\r\n            data={getRows()}\r\n            selected={visibleUsers}\r\n            changeSelected={changeSelected}\r\n          />\r\n        </Grid>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setSearchError(false);\r\n  };\r\n\r\n  const handleTabChange = (e, newValue) => {\r\n    setTabSelected(newValue);\r\n  };\r\n\r\n  const renderRecentMatches = index => {\r\n    if (recentMatches.length > 0) {\r\n      return (\r\n        <Grid container spacing={3} className=\"stats-container\">\r\n          {recentMatches.map((match, idx) => {\r\n            return (\r\n              <Grid item hidden={index !== tabSelected} key={idx} sm={12}>\r\n                <MatchCard data={match} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderMainStats = index => {\r\n    return (\r\n      <Grid container spacing={3} className=\"stats-container\">\r\n        \r\n        {renderSearchResults(index)} {renderLeaderboards(index)}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderTabs = () => {\r\n    if (Object.keys(visibleUsers).length > 0) {\r\n      return (\r\n        <Paper className={classes.marginTop}>\r\n          <Tabs\r\n            value={tabSelected}\r\n            onChange={handleTabChange}\r\n            variant='fullWidth'\r\n            indicatorColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Overview\" />\r\n            <Tab label=\"Recent Matches\" />\r\n          </Tabs>\r\n        </Paper>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Container maxWidth=\"lg\">\r\n        \r\n        {renderTags(0)} <Search search={searchUser} cookies={props.cookies} />\r\n        {renderProgressBar()} {renderTabs()} {renderMainStats(0)}\r\n        {renderRecentMatches(1)}\r\n      </Container>\r\n      <Snackbar\r\n        open={searchError}\r\n        autoHideDuration={3000}\r\n        onClose={handleAlertClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\"\r\n        }}\r\n      >\r\n        <Alert onClose={handleAlertClose} severity=\"error\">\r\n          The username you entered was invalid.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withCookies(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark'\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookiesProvider>\r\n      <MuiThemeProvider theme={darkTheme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </MuiThemeProvider>\r\n    </CookiesProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/psn.70872efd.svg\";","module.exports = __webpack_public_path__ + \"static/media/xbox.faa28b5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-net.355d0860.svg\";","module.exports = __webpack_public_path__ + \"static/media/trophy.b42e1893.svg\";"],"sourceRoot":""}